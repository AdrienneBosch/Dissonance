<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <FontFamily x:Key="BaseFontFamily">Segoe UI</FontFamily>

    <Thickness x:Key="CardPadding">20</Thickness>
    <CornerRadius x:Key="CardCornerRadius">18</CornerRadius>
    <CornerRadius x:Key="InputCornerRadius">10</CornerRadius>
    <CornerRadius x:Key="ButtonCornerRadius">12</CornerRadius>
    <CornerRadius x:Key="HeaderCornerRadius">18</CornerRadius>
    <CornerRadius x:Key="SurfaceCornerRadius">24</CornerRadius>

    <Geometry x:Key="MinimizeIconGeometry">M 3 11 H 13</Geometry>
    <Geometry x:Key="MaximizeIconGeometry">M 3 3 H 13 V 13 H 3 Z</Geometry>
    <Geometry x:Key="RestoreIconGeometry">M 5 5 H 13 V 13 H 5 Z M 3 3 H 11 V 11 H 3 Z</Geometry>
    <Geometry x:Key="CloseIconGeometry">M 4 4 L 12 12 M 12 4 L 4 12</Geometry>
    <Geometry x:Key="HamburgerIconGeometry">M 3 4 H 13 M 3 8 H 13 M 3 12 H 13</Geometry>
    <Geometry x:Key="MenuCloseIconGeometry">M 4 4 L 12 12 M 12 4 L 4 12</Geometry>

    <Style x:Key="CardContainerStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource CardBackgroundBrush}"/>
        <Setter Property="Padding" Value="{StaticResource CardPadding}"/>
        <Setter Property="CornerRadius" Value="{StaticResource CardCornerRadius}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
    </Style>

    <Style x:Key="HeaderTitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="30"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderForegroundBrush}"/>
    </Style>

    <Style x:Key="HeaderSubtitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Opacity" Value="0.85"/>
        <Setter Property="Foreground" Value="{DynamicResource HeaderForegroundBrush}"/>
    </Style>

    <Style x:Key="WindowTitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Opacity" Value="0.9"/>
    </Style>

    <Style x:Key="CardTitleTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
    </Style>

    <Style x:Key="CardDescriptionTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
        <Setter Property="Margin" Value="0,4,0,12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
    </Style>

    <Style x:Key="ValueBadgeTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="HorizontalAlignment" Value="Right"/>
    </Style>

    <Style x:Key="WindowControlButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="36"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Margin" Value="6,0,0,0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TitleBarForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <Viewbox Width="14"
                                 Height="14"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center">
                            <Path Data="{TemplateBinding Content}"
                                  Stroke="{TemplateBinding Foreground}"
                                  StrokeThickness="1.6"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeLineJoin="Round"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowControlHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource WindowControlPressedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MaximizeWindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="Content" Value="{StaticResource MaximizeIconGeometry}"/>
        <Setter Property="AutomationProperties.Name" Value="Maximize window"/>
        <Setter Property="AutomationProperties.HelpText" Value="Maximizes the application window"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=WindowState}" Value="Maximized">
                <Setter Property="Content" Value="{StaticResource RestoreIconGeometry}"/>
                <Setter Property="AutomationProperties.Name" Value="Restore window"/>
                <Setter Property="AutomationProperties.HelpText" Value="Restores the window to its previous size"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="CloseWindowControlButtonStyle" TargetType="Button" BasedOn="{StaticResource WindowControlButtonStyle}">
        <Setter Property="AutomationProperties.Name" Value="Close window"/>
        <Setter Property="AutomationProperties.HelpText" Value="Closes the application"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseControlHoverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource CloseControlPressedBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PrimaryButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="44"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource ButtonCornerRadius}"
                            SnapsToDevicePixels="True">
                        <Viewbox Width="18"
                                 Height="18"
                                 HorizontalAlignment="Center"
                                 VerticalAlignment="Center">
                            <Path x:Name="IconPath"
                                  Data="{StaticResource HamburgerIconGeometry}"
                                  Stroke="{DynamicResource PrimaryForegroundBrush}"
                                  StrokeThickness="1.6"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  StrokeLineJoin="Round"/>
                        </Viewbox>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="IconPath" Property="Stroke" Value="{DynamicResource ButtonForegroundBrush}"/>
                            <Setter TargetName="IconPath" Property="Data" Value="{StaticResource MenuCloseIconGeometry}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationMenuItemButtonBaseStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="10"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="NavigationMenuHomeButtonStyle" TargetType="Button" BasedOn="{StaticResource NavigationMenuItemButtonBaseStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="MinWidth" Value="220"/>
        <Setter Property="MinHeight" Value="44"/>
        <Setter Property="Padding" Value="18,12"/>
        <Setter Property="FontSize" Value="16"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding IsHomeSelected}" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="NavigationMenuListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="0,2,0,2"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="ToolTipService.ToolTip" Value="{Binding Description, FallbackValue=Open this section}"/>
        <Setter Property="AutomationProperties.Name" Value="{Binding Title}"/>
        <Setter Property="AutomationProperties.HelpText" Value="{Binding Description, FallbackValue=Open this section}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            Padding="14,10"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DropdownMenuButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="8"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RecognizesAccessKey="True"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HomeTileButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource TileBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource TileBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="24"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="260"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="18"
                                  ShadowDepth="0"
                                  Opacity="0.2"
                                  Color="{DynamicResource TileShadowColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource CardCornerRadius}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ThemeToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Width" Value="90"/>
        <Setter Property="Height" Value="36"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="SwitchBackground"
                            Background="{DynamicResource ToggleBackgroundBrush}"
                            CornerRadius="18"
                            Padding="6,4"
                            SnapsToDevicePixels="True">
                        <Grid>
                            <TextBlock Text="☀"
                                       FontSize="16"
                                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                                       HorizontalAlignment="Left"
                                       VerticalAlignment="Center"
                                       Margin="4,0,0,0"/>
                            <TextBlock Text="🌙"
                                       FontSize="16"
                                       Foreground="{DynamicResource SecondaryForegroundBrush}"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Center"
                                       Margin="0,0,4,0"/>
                            <Border x:Name="Thumb"
                                    Width="28"
                                    Height="28"
                                    Background="{DynamicResource ThemeToggleThumbBrush}"
                                    CornerRadius="14"
                                    HorizontalAlignment="Left"
                                    Margin="2,0"
                                    SnapsToDevicePixels="True"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="SwitchBackground" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right"/>
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ButtonForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Border x:Name="BackgroundBorder"
                            Background="Transparent"
                            CornerRadius="8">
                        <Grid Margin="12,8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="CheckBackground"
                                    Width="18"
                                    Height="18"
                                    CornerRadius="4"
                                    Background="{DynamicResource SurfaceBackgroundBrush}"
                                    BorderBrush="{DynamicResource CardBorderBrush}"
                                    BorderThickness="1"
                                    VerticalAlignment="Center"/>
                            <Path x:Name="CheckMark"
                                  Data="M 3 9 L 7 13 L 15 5"
                                  StrokeThickness="2"
                                  StrokeLineJoin="Round"
                                  StrokeStartLineCap="Round"
                                  StrokeEndLineCap="Round"
                                  Stroke="{DynamicResource ButtonForegroundBrush}"
                                  Visibility="Collapsed"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            <ContentPresenter Grid.Column="1"
                                              Margin="12,0,0,0"
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckBackground" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="CheckBackground" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource SubtleBackgroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinHeight" Value="34"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{StaticResource InputCornerRadius}">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      Margin="0"
                                      Focusable="False"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                            Background="Transparent"
                            HorizontalAlignment="Stretch"
                            CornerRadius="8"
                            Padding="12,6"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsHighlighted" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="True"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource InputBorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource InputForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ModernComboBoxItemStyle}"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border x:Name="BackgroundBorder"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource InputCornerRadius}"
                                SnapsToDevicePixels="True"/>
                        <ToggleButton x:Name="DropDownToggle"
                                      Focusable="False"
                                      Background="Transparent"
                                      Foreground="{TemplateBinding Foreground}"
                                      BorderBrush="{x:Null}"
                                      BorderThickness="0"
                                      Margin="0"
                                      Padding="0"
                                      ClickMode="Press"
                                      HorizontalContentAlignment="Stretch"
                                      VerticalContentAlignment="Stretch"
                                      OverridesDefaultStyle="True"
                                      FocusVisualStyle="{x:Null}"
                                      IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </ControlTemplate>
                            </ToggleButton.Template>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  Margin="12,0,16,0"
                                                  HorizontalAlignment="Stretch"
                                                  VerticalAlignment="Center"
                                                  RecognizesAccessKey="True"
                                                  TextElement.Foreground="{TemplateBinding Foreground}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                                <Path x:Name="DropDownGlyph"
                                      Grid.Column="1"
                                      Data="M 0 0 L 6 6 L 12 0"
                                      StrokeThickness="2"
                                      StrokeEndLineCap="Round"
                                      Stroke="{DynamicResource SecondaryForegroundBrush}"
                                      Stretch="Uniform"
                                      Width="12"
                                      Height="6"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Margin="0,0,12,0"/>
                            </Grid>
                        </ToggleButton>
                        <TextBox x:Name="PART_EditableTextBox"
                                 Margin="12,0,36,0"
                                 Style="{x:Null}"
                                 Background="Transparent"
                                 BorderThickness="0"
                                 HorizontalAlignment="Stretch"
                                 VerticalContentAlignment="Center"
                                 Foreground="{TemplateBinding Foreground}"
                                 Visibility="Hidden"
                                 Focusable="True"
                                 Padding="0"
                                 Text="{TemplateBinding Text}"
                                 IsReadOnly="False"
                                 CaretBrush="{DynamicResource AccentBrush}"/>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               PlacementTarget="{Binding ElementName=DropDownToggle}"
                               Focusable="False"
                               PopupAnimation="Fade"
                               StaysOpen="False">
                            <Border x:Name="PopupBorder"
                                    Background="{DynamicResource CardBackgroundBrush}"
                                    BorderBrush="{DynamicResource CardBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="12"
                                    Padding="4"
                                    MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer Margin="0"
                                              CanContentScroll="True"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Disabled">
                                    <ItemsPresenter HorizontalAlignment="Stretch"
                                                    KeyboardNavigation.DirectionalNavigation="Contained"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource ControlHoverBrush}"/>
                            <Setter TargetName="DropDownGlyph" Property="Stroke" Value="{DynamicResource HoverForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderThickness" Value="2"/>
                            <Setter TargetName="DropDownGlyph" Property="Stroke" Value="{DynamicResource HoverForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="IsDropDownOpen" Value="True">
                            <Setter TargetName="BackgroundBorder" Property="Background" Value="{DynamicResource HighlightBrush}"/>
                            <Setter TargetName="BackgroundBorder" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="DropDownGlyph" Property="Stroke" Value="{DynamicResource HoverForegroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="PopupBorder" Property="MinHeight" Value="0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="True">
                            <Setter TargetName="ContentPresenter" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_EditableTextBox" Property="IsHitTestVisible" Value="True"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                            <Setter TargetName="DropDownGlyph" Property="Stroke" Value="{DynamicResource MutedForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HighlightColorComboBoxStyle"
           TargetType="ComboBox"
           BasedOn="{StaticResource ModernComboBoxStyle}">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ButtonForegroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="MinHeight" Value="36"/>
    </Style>

    <Style x:Key="SliderRepeatButtonStyle" TargetType="RepeatButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="2"
                            Height="4"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ModernSliderStyle" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid Margin="0,12,0,8">
                        <Border Background="{DynamicResource SliderTrackBackgroundBrush}"
                                Height="4"
                                CornerRadius="2"
                                VerticalAlignment="Center"/>
                        <Track x:Name="PART_Track"
                               Maximum="{TemplateBinding Maximum}"
                               Minimum="{TemplateBinding Minimum}"
                               Value="{TemplateBinding Value}"
                               Margin="0"
                               IsDirectionReversed="{TemplateBinding IsDirectionReversed}">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                              Background="{DynamicResource AccentBrush}"/>
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderRepeatButtonStyle}"
                                              Background="Transparent"/>
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb"
                                       Width="18"
                                       Height="18"
                                       Background="{DynamicResource AccentBrush}"
                                       BorderBrush="{DynamicResource SliderThumbBorderBrush}"
                                       BorderThickness="2"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.6"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="True">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="True">
                            <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ControlPressedBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
