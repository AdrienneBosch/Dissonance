<UserControl x:Class="Dissonance.Windows.Controls.ManualSpeechView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:Dissonance.ViewModels"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=viewModels:ManualSpeechViewModel}">
    <UserControl.Resources>
        <Style x:Key="ManualSpeechSecondaryButtonStyle"
               TargetType="Button"
               BasedOn="{StaticResource PrimaryButtonStyle}">
            <Setter Property="Background" Value="{DynamicResource SurfaceBackgroundBrush}" />
            <Setter Property="Foreground" Value="{DynamicResource PrimaryForegroundBrush}" />
            <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,0,0,12">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="0,0,0,12">
            <TextBlock x:Name="ManualSpeechLabel"
                       Text="Manual speech input"
                       Style="{StaticResource CardTitleTextStyle}"
                       AutomationProperties.Name="Manual speech input" />
            <TextBlock Text="Type or paste any text and select Speak to hear it immediately."
                       Style="{StaticResource CardDescriptionTextStyle}" />
        </StackPanel>
        <Border Grid.Row="1"
                BorderBrush="{DynamicResource CardBorderBrush}"
                BorderThickness="1"
                Background="{DynamicResource SurfaceBackgroundBrush}">
            <TextBox x:Name="ManualSpeechTextBox"
                     Text="{Binding InputText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnNotifyDataErrors=True}"
                     AcceptsReturn="True"
                     TextWrapping="Wrap"
                     MinHeight="160"
                     Padding="12"
                     VerticalScrollBarVisibility="Auto"
                     HorizontalScrollBarVisibility="Disabled"
                     AutomationProperties.LabeledBy="{Binding ElementName=ManualSpeechLabel}"
                     AutomationProperties.HelpText="Enter the text you want to hear read aloud"
                     SpellCheck.IsEnabled="True" />
        </Border>
        <StackPanel Grid.Row="2"
                    Orientation="Vertical"
                    Margin="0,12,0,0">
            <TextBlock Text="{Binding InputValidationMessage, TargetNullValue=''}"
                       Margin="0,0,0,12"
                       Foreground="{DynamicResource AccentBrush}">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Visibility" Value="Collapsed" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Button Content="Speak"
                        Command="{Binding SpeakInputCommand}"
                        Style="{StaticResource PrimaryButtonStyle}"
                        MinWidth="96"
                        Margin="0,0,8,0"
                        AutomationProperties.Name="Speak manual input"
                        AutomationProperties.HelpText="Play the text you've typed"
                        IsEnabled="{Binding CanSpeak}" />
                <Button Content="Clear"
                        Command="{Binding ClearInputCommand}"
                        Style="{StaticResource ManualSpeechSecondaryButtonStyle}"
                        MinWidth="96"
                        AutomationProperties.Name="Clear manual input"
                        AutomationProperties.HelpText="Remove all text from the manual speech box" />
            </StackPanel>
        </StackPanel>
    </Grid>
</UserControl>
