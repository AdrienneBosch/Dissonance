<Window x:Name="Dissonance"
        x:Class="Dissonance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Dissonance.ViewModels"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        xmlns:controls="clr-namespace:Dissonance.Windows.Controls"
        xmlns:status="clr-namespace:Dissonance.Services.StatusAnnouncements"
        mc:Ignorable="d"
        Title="Dissonance"
        MinHeight="520"
        MinWidth="880"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        Background="{DynamicResource WindowBackgroundBrush}"
        Foreground="{DynamicResource PrimaryForegroundBrush}"
        FontFamily="{DynamicResource BaseFontFamily}"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="0"
                             CornerRadius="0"
                             GlassFrameThickness="0"
                             ResizeBorderThickness="6"/>
    </shell:WindowChrome.WindowChrome>
    <Window.Resources>
        <Style x:Key="SettingsToggleSwitchStyle" TargetType="ToggleButton">
            <Setter Property="Width" Value="52"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="Track"
                                Background="{DynamicResource SurfaceBackgroundBrush}"
                                BorderBrush="{DynamicResource CardBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="14"
                                Padding="3"
                                SnapsToDevicePixels="True">
                            <Grid>
                                <Border x:Name="Thumb"
                                        Width="22"
                                        Height="22"
                                        Background="{DynamicResource ButtonForegroundBrush}"
                                        CornerRadius="11"
                                        HorizontalAlignment="Left"
                                        SnapsToDevicePixels="True"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="Track" Property="Background" Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right"/>
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource PrimaryBackgroundBrush}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Thumb" Property="Background" Value="{DynamicResource ControlHoverBrush}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter TargetName="Track" Property="BorderBrush" Value="{DynamicResource AccentBrush}"/>
                                <Setter TargetName="Track" Property="BorderThickness" Value="2"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Opacity" Value="0.6"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <DataTemplate DataType="{x:Type local:DocumentReaderViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <StackPanel Grid.Row="0"
                            Margin="0,0,0,20">
                    <TextBlock Text="Open a text document to review it before narration."
                               Style="{StaticResource CardDescriptionTextStyle}"/>
                    <StackPanel Orientation="Horizontal"
                                Margin="0,12,0,0"
                                HorizontalAlignment="Left">
                        <Button Content="Open document…"
                                Command="{Binding BrowseForDocumentCommand}"
                                Style="{StaticResource PrimaryCompactButtonStyle}"
                                MinWidth="160"
                                MinHeight="32"
                                TabIndex="0"
                                ToolTip="Browse for a text document to preview before narration"
                                AutomationProperties.Name="Open document"
                                AutomationProperties.HelpText="Opens a file picker so you can choose a text document to load"/>
                        <Button Content="Clear"
                                Command="{Binding ClearDocumentCommand}"
                                Style="{StaticResource PrimaryCompactButtonStyle}"
                                MinWidth="120"
                                MinHeight="32"
                                Margin="12,0,0,0"
                                TabIndex="1"
                                ToolTip="Remove the currently loaded document"
                                AutomationProperties.Name="Clear loaded document"
                                AutomationProperties.HelpText="Unloads the current document and resets the preview"/>
                    </StackPanel>
                    <ProgressBar Height="4"
                                 Margin="0,16,0,0"
                                 IsIndeterminate="True">
                        <ProgressBar.Style>
                            <Style TargetType="ProgressBar">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ProgressBar.Style>
                    </ProgressBar>
                </StackPanel>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="320"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Border Grid.Column="0"
                            Style="{StaticResource CardContainerStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <StackPanel Grid.Row="0">
                                <TextBlock Text="Document details"
                                           Style="{StaticResource CardTitleTextStyle}"/>
                                <TextBlock Text="Supported format: plain text (.txt)"
                                           Style="{StaticResource CardDescriptionTextStyle}"
                                           Margin="0,6,0,0"/>
                                <TextBlock Text="Selected file"
                                           FontWeight="SemiBold"
                                           Margin="0,16,0,0"/>
                                <TextBox Style="{StaticResource ModernTextBoxStyle}"
                                         Text="{Binding FilePath, Mode=OneWay, TargetNullValue=No document selected}"
                                         IsReadOnly="True"
                                         Margin="0,8,0,0"
                                         HorizontalAlignment="Stretch"
                                         TextWrapping="Wrap"
                                         MinHeight="34"
                                         IsTabStop="False"
                                         ToolTip="{Binding FilePath, Mode=OneWay, TargetNullValue=No document selected}"/>
                                <Border Margin="0,16,0,0"
                                        Padding="12"
                                        Background="{DynamicResource SurfaceBackgroundBrush}"
                                        BorderBrush="{DynamicResource CardBorderBrush}"
                                        BorderThickness="1"
                                        CornerRadius="8">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <StackPanel Grid.Column="0"
                                                    Orientation="Vertical"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    MaxWidth="240">
                                            <TextBlock x:Name="RememberDocumentToggleLabel"
                                                       Text="Remember document progress"
                                                       FontSize="14"
                                                       FontWeight="SemiBold"
                                                       Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                                            <TextBlock Margin="0,4,0,0"
                                                       Text="Reopen the last document and resume where you left off."
                                                       Style="{StaticResource CardDescriptionTextStyle}"
                                                       TextWrapping="Wrap"/>
                                        </StackPanel>
                                        <ToggleButton Grid.Column="1"
                                                      Style="{StaticResource SettingsToggleSwitchStyle}"
                                                      IsChecked="{Binding RememberDocumentProgress, Mode=TwoWay}"
                                                      VerticalAlignment="Center"
                                                      Margin="16,0,0,0"
                                                      TabIndex="2"
                                                      ToolTip="Remember your last document and reading position when Dissonance starts"
                                                      AutomationProperties.Name="Remember the last document and position"
                                                      AutomationProperties.HelpText="When enabled, Dissonance reopens the last document and restores the saved reading position."
                                                      AutomationProperties.LabeledBy="{Binding ElementName=RememberDocumentToggleLabel}"/>
                                    </Grid>
                                </Border>
                                <Grid Margin="0,16,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <StackPanel Grid.Column="0">
                                        <TextBlock Text="Words"
                                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                                        <TextBlock Text="{Binding WordCount, StringFormat={}{0:N0}}"
                                                   Style="{StaticResource ValueBadgeTextStyle}"
                                                   Margin="0,6,0,0"/>
                                    </StackPanel>
                                    <StackPanel Grid.Column="1">
                                        <TextBlock Text="Characters"
                                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                                        <TextBlock Text="{Binding CharacterCount, StringFormat={}{0:N0}}"
                                                   Style="{StaticResource ValueBadgeTextStyle}"
                                                   Margin="0,6,0,0"/>
                                    </StackPanel>
                                </Grid>
                            </StackPanel>
                            <ScrollViewer Grid.Row="1"
                                          Margin="0,24,0,0"
                                          VerticalScrollBarVisibility="Auto"
                                          HorizontalScrollBarVisibility="Disabled">
                                <StackPanel>
                                    <TextBlock x:Name="PlaybackHotkeyHeading"
                                               Text="Playback hotkey"
                                               FontWeight="SemiBold"
                                               Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                                    <TextBlock Margin="0,4,0,0"
                                               Text="Assign a shortcut to control document narration while reviewing the preview."
                                               Style="{StaticResource CardDescriptionTextStyle}"
                                               TextWrapping="Wrap"/>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="0,8,0,0">
                                        <TextBox x:Name="DocumentPlaybackHotkeyTextBox"
                                                 Width="180"
                                                 Style="{StaticResource ModernTextBoxStyle}"
                                                 Text="{Binding PlaybackHotkeyCombination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                 IsReadOnly="True"
                                                 TabIndex="3"
                                                 Tag="{Binding ElementName=DocumentPlaybackHotkeyApplyButton}"
                                                 ToolTip="Press the keys you want to use for the document playback hotkey"
                                                 PreviewKeyDown="DocumentPlaybackHotkeyTextBox_PreviewKeyDown"
                                                 AutomationProperties.LabeledBy="{Binding ElementName=PlaybackHotkeyHeading}"
                                                 AutomationProperties.Name="Document playback hotkey"
                                                 AutomationProperties.HelpText="Set the hotkey used to play or stop document narration"/>
                                        <Button x:Name="DocumentPlaybackHotkeyApplyButton"
                                                Content="Apply"
                                                Style="{StaticResource PrimaryCompactButtonStyle}"
                                                Command="{Binding ApplyPlaybackHotkeyCommand}"
                                                Margin="12,0,0,0"
                                                MinWidth="96"
                                                TabIndex="4"
                                                ToolTip="Apply the new document playback hotkey"
                                                AutomationProperties.Name="Apply document playback hotkey"
                                                AutomationProperties.HelpText="Applies the document playback hotkey combination"/>
                                    </StackPanel>
                                    <CheckBox Margin="0,12,0,0"
                                              Content="Use the hotkey to play and pause instead of stopping"
                                              Style="{StaticResource MenuCheckBoxStyle}"
                                              IsChecked="{Binding PlaybackHotkeyTogglesPause, Mode=TwoWay}"
                                              ToolTip="When enabled, pressing the hotkey toggles between play and pause."
                                              TabIndex="5"
                                              AutomationProperties.Name="Toggle playback hotkey pause behavior"
                                              AutomationProperties.HelpText="Enable to make the playback hotkey pause and resume the document preview"/>
                                    <StackPanel Orientation="Horizontal"
                                                Margin="0,16,0,0"
                                                VerticalAlignment="Center">
                                        <TextBlock Text="Highlight color"
                                                   Margin="0,0,12,0"
                                                   VerticalAlignment="Center"
                                                   FontWeight="SemiBold"
                                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                                        <ComboBox ItemsSource="{Binding HighlightColorOptions}"
                                                  SelectedItem="{Binding SelectedHighlightColor, Mode=TwoWay}"
                                                  DisplayMemberPath="DisplayName"
                                                  MinWidth="200"
                                                  Style="{StaticResource HighlightColorComboBoxStyle}"
                                                  TabIndex="6"
                                                  ToolTip="Choose the color used to highlight narration words"
                                                  AutomationProperties.Name="Document highlight color"
                                                  AutomationProperties.HelpText="Select the color used to highlight the words being narrated"/>
                                    </StackPanel>
                                    <TextBlock Text="{Binding StatusMessage}"
                                               Margin="0,20,0,0"
                                               TextWrapping="Wrap"
                                               Foreground="{DynamicResource AccentBrush}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasStatusMessage}" Value="True">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </ScrollViewer>
                        </Grid>
                    </Border>

                    <Border Grid.Column="1"
                            Margin="24,0,0,0"
                            Style="{StaticResource CardContainerStyle}">
                        <Grid>
                            <Grid.Resources>
                                <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                            </Grid.Resources>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Document preview"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <StackPanel Grid.Row="1"
                                        Orientation="Horizontal"
                                        Margin="0,12,0,0"
                                        HorizontalAlignment="Left">
                                <Button Content="⏪ 10s"
                                        Command="{Binding SeekBackwardCommand}"
                                        Style="{StaticResource PrimaryCompactButtonStyle}"
                                        MinWidth="120"
                                        MinHeight="32"
                                        IsEnabled="{Binding IsDocumentLoaded}"
                                        TabIndex="7"
                                        ToolTip="Rewind the narration by ten seconds"
                                        AutomationProperties.Name="Rewind 10 seconds"
                                        AutomationProperties.HelpText="Moves the narration back by ten seconds"/>
                                <Button Content="{Binding PlayPauseLabel}"
                                        Command="{Binding PlayPauseCommand}"
                                        Style="{StaticResource PrimaryCompactButtonStyle}"
                                        MinWidth="140"
                                        MinHeight="32"
                                        Margin="12,0,0,0"
                                        IsEnabled="{Binding IsDocumentLoaded}"
                                        TabIndex="8"
                                        ToolTip="Start or pause document narration"
                                        AutomationProperties.Name="Play or pause document narration"
                                        AutomationProperties.HelpText="Toggles document narration playback"/>
                                <Button Content="10s ⏩"
                                        Command="{Binding SeekForwardCommand}"
                                        Style="{StaticResource PrimaryCompactButtonStyle}"
                                        MinWidth="120"
                                        MinHeight="32"
                                        Margin="12,0,0,0"
                                        IsEnabled="{Binding IsDocumentLoaded}"
                                        TabIndex="9"
                                        ToolTip="Advance the narration by ten seconds"
                                        AutomationProperties.Name="Fast forward 10 seconds"
                                        AutomationProperties.HelpText="Moves the narration ahead by ten seconds"/>
                            </StackPanel>
                            <controls:HighlightingFlowDocumentScrollViewer Grid.Row="2"
                                                                              Margin="0,12,0,0"
                                                                              Document="{Binding Document}"
                                                                              HighlightStartIndex="{Binding HighlightStartIndex}"
                                                                              HighlightLength="{Binding HighlightLength}"
                                                                              HighlightBrush="{Binding HighlightBrush}"
                                                                              VerticalScrollBarVisibility="Auto"
                                                                              TabIndex="10"
                                                                              AutomationProperties.Name="Document preview content"
                                                                              AutomationProperties.HelpText="Displays the loaded document with highlighted narration text"
                                                                              ToolTip="Preview of the loaded document">
                                <controls:HighlightingFlowDocumentScrollViewer.Style>
                                    <Style TargetType="controls:HighlightingFlowDocumentScrollViewer">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDocumentLoaded}" Value="True">
                                                <Setter Property="Visibility" Value="Visible"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </controls:HighlightingFlowDocumentScrollViewer.Style>
                            </controls:HighlightingFlowDocumentScrollViewer>
                            <TextBlock Grid.Row="2"
                                       Margin="0,20,0,0"
                                       Text="Open a document to preview its contents here."
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       TextAlignment="Center"
                                       Foreground="{DynamicResource SecondaryForegroundBrush}">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding IsDocumentLoaded}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:ReaderSettingsViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="0,0,12,12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="VoiceSelectionHeading"
                                   Grid.Row="0"
                                   Text="Text-to-Speech Voice"
                                   Style="{StaticResource CardTitleTextStyle}"/>
                        <TextBlock Grid.Row="1"
                                   Text="Choose which installed voice is used for speech."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <Grid Grid.Row="2" Margin="0,12,0,0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="VoiceSelectionComboBox"
                                      Grid.Column="0"
                                      Style="{StaticResource ModernComboBoxStyle}"
                                      ItemsSource="{Binding AvailableVoices}"
                                      SelectedItem="{Binding Voice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                      AutomationProperties.LabeledBy="{Binding ElementName=VoiceSelectionHeading}"
                                      ToolTip="Select the voice used by the text-to-speech engine"
                                      TabIndex="0"
                                      HorizontalAlignment="Stretch"
                                      MinWidth="220"
                                      MinHeight="34"/>
                            <Button Grid.Column="1"
                                    Content="{Binding PreviewVoiceButtonLabel}"
                                    Command="{Binding PreviewVoiceCommand}"
                                    Style="{StaticResource PrimaryCompactButtonStyle}"
                                    Margin="12,0,0,0"
                                    HorizontalAlignment="Stretch"
                                    MinHeight="32"
                                    ToolTip="{Binding PreviewVoiceButtonToolTip}"
                                    AutomationProperties.Name="{Binding PreviewVoiceButtonLabel}"
                                    AutomationProperties.HelpText="{Binding PreviewVoiceHelpText}"
                                    TabIndex="1"/>
                        </Grid>
                    </Grid>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="12,0,0,12">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VoiceRateHeading"
                                       Text="Voice Rate"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding VoiceRate, StringFormat={}{0:F0}×}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Fine tune how quickly the narration plays back."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <TextBox x:Name="VoiceRateTextBox"
                                 Style="{StaticResource ModernTextBoxStyle}"
                                 Text="{Binding VoiceRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AutomationProperties.LabeledBy="{Binding ElementName=VoiceRateHeading}"
                                 ToolTip="Set the speaking rate of the text-to-speech voice"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Center"
                                 Width="140"
                                 TabIndex="2"
                                 AutomationProperties.HelpText="Enter a numeric value to control how fast the voice speaks"/>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="1"
                        Grid.Column="0"
                        Grid.ColumnSpan="2"
                        Margin="0,12,0,0">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VolumeHeading"
                                       Text="Volume"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding Volume, StringFormat={}{0}%}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Adjust how loud the speech output should be."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <Slider x:Name="VoiceVolumeSlider"
                                Style="{StaticResource ModernSliderStyle}"
                                Minimum="0"
                                Maximum="100"
                                Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SmallChange="1"
                                LargeChange="10"
                                AutomationProperties.Name="Voice volume"
                                AutomationProperties.LabeledBy="{Binding ElementName=VolumeHeading}"
                                AutomationProperties.HelpText="Use the arrow keys to adjust the speech output volume"
                                Focusable="True"
                                IsTabStop="True"
                                TabIndex="3"
                                KeyDown="VoiceVolumeSlider_KeyDown">
                            <Slider.ToolTip>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="Set the output volume for text-to-speech"/>
                                        <TextBlock Text="{Binding Value, RelativeSource={RelativeSource AncestorType=Slider}, StringFormat=Current volume: {0}%}"/>
                                    </StackPanel>
                                </ToolTip>
                            </Slider.ToolTip>
                        </Slider>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:NavigationSectionViewModel}">
            <ContentPresenter Content="{Binding ContentViewModel}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:MainWindowViewModel}">
            <Grid>
                <Border Style="{StaticResource CardContainerStyle}"
                        Margin="0">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="HotkeyHeading"
                                       Text="Clipboard Hotkey"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Margin="12,0,0,0"
                                       VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource ValueBadgeTextStyle}">
                                        <Setter Property="Text" Value="{Binding HotkeyCombination}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding HotkeyCombination}" Value="">
                                                <Setter Property="Text" Value="Unassigned"/>
                                                <Setter Property="Foreground" Value="{DynamicResource SecondaryForegroundBrush}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                        </Grid>

                        <TextBlock Margin="0,8,0,0"
                                   Text="Use the same shortcut to copy selections, hear them aloud, and control clipboard narration."
                                   Style="{StaticResource CardDescriptionTextStyle}"
                                   TextWrapping="Wrap"/>

                        <StackPanel Margin="0,16,0,0">
                            <TextBlock Text="Hotkey"
                                       FontWeight="SemiBold"
                                       Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                            <StackPanel Orientation="Horizontal"
                                        Margin="0,8,0,0">
                                <TextBox x:Name="ReadClipboardHotkeyTextBox"
                                         Width="180"
                                         Style="{StaticResource ModernTextBoxStyle}"
                                         Text="{Binding HotkeyCombination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                         AutomationProperties.LabeledBy="{Binding ElementName=HotkeyHeading}"
                                         ToolTip="Set the hotkey used to copy the current selection and speak it aloud"
                                         TabIndex="0"
                                         IsReadOnly="True"
                                         Tag="{Binding ElementName=ReadClipboardHotkeyApplyButton}"
                                         PreviewKeyDown="ReadClipboardHotkeyTextBox_PreviewKeyDown"
                                         AutomationProperties.HelpText="Specify the key combination that copies the current selection and speaks it aloud"/>
                                <Button x:Name="ReadClipboardHotkeyApplyButton"
                                        Content="Apply"
                                        Style="{StaticResource PrimaryCompactButtonStyle}"
                                        Command="{Binding ApplyHotkeyCommand}"
                                        Margin="12,0,0,0"
                                        MinWidth="96"
                                        MinHeight="32"
                                        ToolTip="Apply the new hotkey immediately"
                                        TabIndex="1"
                                        AutomationProperties.Name="Apply hotkey"
                                        AutomationProperties.HelpText="Applies the entered hotkey combination"/>
                            </StackPanel>
                        </StackPanel>

                        <Border Margin="0,20,0,0"
                                Padding="14"
                                Background="{DynamicResource SubtleBackgroundBrush}"
                                BorderBrush="{DynamicResource CardBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="10">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <StackPanel Grid.Column="0"
                                            Orientation="Vertical"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            MaxWidth="280">
                                    <TextBlock x:Name="AutoReadToggleLabel"
                                               Text="Automatic clipboard narration"
                                               FontSize="14"
                                               FontWeight="SemiBold"
                                               Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                                    <TextBlock Margin="0,4,0,0"
                                               Text="Speak anything copied with this hotkey without pressing it twice."
                                               Style="{StaticResource CardDescriptionTextStyle}"
                                               TextWrapping="Wrap"/>
                                </StackPanel>
                                <ToggleButton x:Name="AutoReadToggle"
                                              Grid.Column="1"
                                              Style="{StaticResource SettingsToggleSwitchStyle}"
                                              IsChecked="{Binding AutoReadClipboard, Mode=TwoWay}"
                                              VerticalAlignment="Center"
                                              Margin="16,0,0,0"
                                              AutomationProperties.Name="Automatically speak new clipboard text"
                                              AutomationProperties.HelpText="When enabled, clipboard text will be spoken immediately after it changes"
                                              AutomationProperties.LabeledBy="{Binding ElementName=AutoReadToggleLabel}"
                                              TabIndex="2"/>
                            </Grid>
                        </Border>

                        <Border Margin="0,16,0,0"
                                Padding="10"
                                Background="{DynamicResource SurfaceBackgroundBrush}"
                                BorderBrush="{DynamicResource CardBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="8">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path Grid.Column="0"
                                      Width="18"
                                      Height="18"
                                      Stretch="Uniform"
                                      Fill="{DynamicResource AccentBrush}"
                                      Margin="0,0,10,0"
                                      Data="M11,1 C6.029,1 2,5.029 2,10 C2,14.971 6.029,19 11,19 C15.971,19 20,14.971 20,10 C20,5.029 15.971,1 11,1 z M11,4 C11.828,4 12.5,4.672 12.5,5.5 C12.5,6.328 11.828,7 11,7 C10.172,7 9.5,6.328 9.5,5.5 C9.5,4.672 10.172,4 11,4 z M11,9 C11.552,9 12,9.448 12,10 L12,15 C12,15.552 11.552,16 11,16 C10.448,16 10,15.552 10,15 L10,10 C10,9.448 10.448,9 11,9 z"/>
                                <TextBlock Grid.Column="1"
                                           Text="Tip: Press the hotkey again to stop playback instantly—no need to clear the clipboard."
                                           Style="{StaticResource CardDescriptionTextStyle}"
                                           TextWrapping="Wrap"/>
                            </Grid>
                        </Border>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Background="{DynamicResource PrimaryBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                Margin="-6,0,-6,12"
                Padding="16,0"
                CornerRadius="0,0,18,18"
                Background="{DynamicResource TitleBarBackgroundBrush}"
                SnapsToDevicePixels="True"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            Margin="0,0,16,0">
                    <Border Width="8"
                            Height="8"
                            CornerRadius="4"
                            Background="{DynamicResource AccentBrush}"
                            VerticalAlignment="Center"
                            Margin="0,0,8,0"/>
                    <TextBlock Text="Dissonance"
                               Style="{StaticResource WindowTitleTextStyle}"/>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Button Style="{StaticResource WindowControlButtonStyle}"
                            Margin="0"
                            Content="{StaticResource MinimizeIconGeometry}"
                            ToolTip="Minimize"
                            AutomationProperties.Name="Minimize window"
                            AutomationProperties.HelpText="Minimizes the application window"
                            Click="MinimizeButton_Click"/>
                    <Button Style="{StaticResource MaximizeWindowControlButtonStyle}"
                            ToolTip="Maximize or restore window"
                            AutomationProperties.Name="Maximize or restore window"
                            AutomationProperties.HelpText="Toggles between maximized and windowed layouts"
                            Click="MaximizeButton_Click"/>
                    <Button Style="{StaticResource CloseWindowControlButtonStyle}"
                            Content="{StaticResource CloseIconGeometry}"
                            ToolTip="Close window"
                            AutomationProperties.Name="Close window"
                            AutomationProperties.HelpText="Closes the Dissonance application"
                            Click="CloseButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <Grid Grid.Row="1"
              Margin="24,6,24,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Orientation="Horizontal"
                        VerticalAlignment="Top"
                        Margin="0,0,12,0">
                <ToggleButton x:Name="NavigationToggleButton"
                              Style="{StaticResource NavigationToggleButtonStyle}"
                              IsChecked="{Binding IsNavigationMenuOpen, Mode=TwoWay}"
                              ToolTip="Toggle navigation menu"
                              TabIndex="0"
                              AutomationProperties.Name="Toggle navigation menu"
                              AutomationProperties.HelpText="Shows the available Dissonance tools"/>
                <Popup x:Name="NavigationMenuPopup"
                       PlacementTarget="{Binding ElementName=NavigationToggleButton}"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       StaysOpen="False"
                       PopupAnimation="Fade"
                       IsOpen="{Binding IsNavigationMenuOpen, Mode=TwoWay}"
                       DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                       Opened="NavigationMenuPopup_Opened"
                       Closed="NavigationMenuPopup_Closed">
                    <Border Background="{DynamicResource CardBackgroundBrush}"
                            BorderBrush="{DynamicResource CardBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="12"
                            Padding="12">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="18"
                                              ShadowDepth="0"
                                              Opacity="0.4"
                                              Color="#99000000"/>
                        </Border.Effect>
                        <StackPanel FocusManager.IsFocusScope="True"
                                    FocusManager.FocusedElement="{Binding ElementName=NavigationHomeButton}"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.ControlTabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle">
                            <Button x:Name="NavigationHomeButton"
                                    Style="{StaticResource NavigationMenuHomeButtonStyle}"
                                    Command="{Binding NavigateToSectionCommand}"
                                    CommandParameter="{x:Null}"
                                    Margin="0,0,0,8"
                                    ToolTip="Return to the Dissonance home dashboard"
                                    TabIndex="0"
                                    AutomationProperties.Name="Home"
                                    AutomationProperties.HelpText="Return to the main Dissonance dashboard">
                                <TextBlock Text="Home"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                            </Button>
                            <Border Height="1"
                                    Background="{DynamicResource CardBorderBrush}"/>
                            <ListBox x:Name="NavigationListBox"
                                     ItemsSource="{Binding NavigationSections}"
                                     SelectedItem="{Binding SelectedSection, Mode=TwoWay}"
                                     MinWidth="220"
                                     MaxHeight="320"
                                     BorderThickness="0"
                                     Background="Transparent"
                                     Foreground="{DynamicResource PrimaryForegroundBrush}"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ToolTip="Select a section to open"
                                     TabIndex="1"
                                     PreviewKeyDown="NavigationListBox_PreviewKeyDown"
                                     AutomationProperties.Name="Available sections"
                                     AutomationProperties.HelpText="Use the arrow keys to choose a section and press Enter to open it"
                                     SelectionMode="Single"
                                     HorizontalContentAlignment="Stretch"
                                     ItemContainerStyle="{StaticResource NavigationMenuListBoxItemStyle}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Title}"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Border>
                </Popup>
            </StackPanel>

        <Border Grid.Column="1"
                Padding="20,12"
                CornerRadius="{StaticResource HeaderCornerRadius}">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Background" Value="{DynamicResource SectionHeaderBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource SectionHeaderBorderBrush}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                            <Setter Property="Background" Value="{DynamicResource HeaderBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="Transparent"/>
                            <Setter Property="BorderThickness" Value="0"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid Margin="0,0,24,0">
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Dissonance"
                                   Style="{StaticResource HeaderTitleTextStyle}"/>
                        <TextBlock Text="Accessibility-first speech control center"
                                   Style="{StaticResource HeaderSubtitleTextStyle}"
                                   Margin="0,10,0,0"/>
                    </StackPanel>
                    <StackPanel>
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="{Binding SelectedSection.BannerTitle}"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                        <TextBlock Text="{Binding SelectedSection.Description}"
                                   FontSize="14"
                                   Margin="0,6,0,0"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}"
                                   TextWrapping="Wrap">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding SelectedSection.BannerSubtitle}"
                                   FontSize="14"
                                   Margin="0,6,0,0"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                        <Trigger Property="Text" Value="{x:Null}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Button x:Name="SettingsButton"
                            Style="{StaticResource PrimaryButtonStyle}"
                            Content="Settings"
                            Height="36"
                            MinWidth="110"
                            Margin="0,0,12,0"
                            ToolTip="Open settings menu"
                            TabIndex="0"
                            AutomationProperties.Name="Open settings menu"
                            AutomationProperties.HelpText="Opens a list of configuration options"
                            Click="SettingsButton_Click"/>
                    <Popup x:Name="SettingsMenuPopup"
                           PlacementTarget="{Binding ElementName=SettingsButton}"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           StaysOpen="False"
                           PopupAnimation="Fade"
                           DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                           Opened="SettingsMenuPopup_Opened"
                           Closed="SettingsMenuPopup_Closed">
                        <Border Background="{DynamicResource CardBackgroundBrush}"
                                BorderBrush="{DynamicResource CardBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="12"
                                Padding="12">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="18"
                                                  ShadowDepth="0"
                                                  Opacity="0.4"
                                                  Color="#99000000"/>
                            </Border.Effect>
                            <StackPanel FocusManager.IsFocusScope="True"
                                        FocusManager.FocusedElement="{Binding ElementName=SaveSettingsAsDefaultMenuButton}"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.ControlTabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle">
                                <Button x:Name="SaveSettingsAsDefaultMenuButton"
                                        Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Save current settings as default"
                                        Command="{Binding SaveDefaultSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        Margin="0,0,0,6"
                                        TabIndex="0"
                                        ToolTip="Save the current configuration as the default"
                                        AutomationProperties.Name="Save current settings as default"
                                        AutomationProperties.HelpText="Saves the configuration so it loads automatically next time"/>
                                <Border Height="1"
                                        Background="{DynamicResource CardBorderBrush}"
                                        Margin="0,4,0,6"/>
                                <CheckBox Style="{StaticResource MenuCheckBoxStyle}"
                                         Content="Auto-save default on close"
                                         IsChecked="{Binding SaveConfigAsDefaultOnClose, Mode=TwoWay}"
                                         Click="SettingsMenuAutoSave_Click"
                                         Margin="0,0,0,6"
                                         TabIndex="1"
                                         ToolTip="Automatically save the configuration when closing the app"
                                         AutomationProperties.Name="Auto-save default on close"
                                         AutomationProperties.HelpText="Automatically write the current configuration as the default when the app is closed"/>
                                <Border Height="1"
                                        Background="{DynamicResource CardBorderBrush}"
                                        Margin="0,4,0,6"/>
                                <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Export settings..."
                                        Command="{Binding ExportSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        Margin="0,0,0,6"
                                        TabIndex="2"
                                        ToolTip="Export the current configuration to a file"
                                        AutomationProperties.Name="Export settings"
                                        AutomationProperties.HelpText="Exports the current configuration to a file"/>
                                <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Import settings..."
                                        Command="{Binding ImportSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        TabIndex="3"
                                        ToolTip="Import a configuration from a saved file"
                                        AutomationProperties.Name="Import settings"
                                        AutomationProperties.HelpText="Imports a configuration from a saved file"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                    <TextBlock Text="{Binding CurrentThemeName}"
                               Foreground="{DynamicResource HeaderForegroundBrush}"
                               FontWeight="SemiBold"
                               Margin="0,0,12,0"
                               VerticalAlignment="Center"/>
                    <ToggleButton Style="{StaticResource ThemeToggleButtonStyle}"
                                  IsChecked="{Binding IsDarkTheme, Mode=TwoWay}"
                                  ToolTip="Toggle between light and dark themes"
                                  TabIndex="1"
                                  AutomationProperties.Name="Toggle between light and dark theme"
                                  AutomationProperties.HelpText="Switches between the light and dark themes"/>
                </StackPanel>
            </Grid>
        </Border>
        </Grid>

        <Border Grid.Row="2"
                Margin="24,8,24,0"
                Padding="16,12"
                CornerRadius="12"
                BorderThickness="1">
            <Border.Style>
                <Style TargetType="Border">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Setter Property="Background" Value="{DynamicResource StatusInfoBackgroundBrush}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource StatusInfoBorderBrush}"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding IsStatusMessageVisible}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Success}">
                            <Setter Property="Background" Value="{DynamicResource StatusSuccessBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StatusSuccessBorderBrush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Warning}">
                            <Setter Property="Background" Value="{DynamicResource StatusWarningBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StatusWarningBorderBrush}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Error}">
                            <Setter Property="Background" Value="{DynamicResource StatusErrorBackgroundBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource StatusErrorBorderBrush}"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <StackPanel Orientation="Horizontal"
                        VerticalAlignment="Center">
                <Ellipse Width="12"
                         Height="12"
                         VerticalAlignment="Center"
                         Margin="0,0,12,0">
                    <Ellipse.Style>
                        <Style TargetType="Ellipse">
                            <Setter Property="Fill" Value="{DynamicResource StatusInfoIndicatorBrush}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Success}">
                                    <Setter Property="Fill" Value="{DynamicResource StatusSuccessIndicatorBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Warning}">
                                    <Setter Property="Fill" Value="{DynamicResource StatusWarningIndicatorBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Error}">
                                    <Setter Property="Fill" Value="{DynamicResource StatusErrorIndicatorBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Ellipse.Style>
                </Ellipse>
                <TextBlock Text="{Binding StatusMessage}"
                           FontSize="13"
                           FontWeight="SemiBold"
                           TextWrapping="Wrap"
                           VerticalAlignment="Center"
                           AutomationProperties.LiveSetting="Assertive"
                           AutomationProperties.Name="{Binding StatusAnnouncementAccessibilityText}"
                           AutomationProperties.HelpText="{Binding StatusAnnouncementAccessibilityText}">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Foreground" Value="{DynamicResource StatusInfoForegroundBrush}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Success}">
                                    <Setter Property="Foreground" Value="{DynamicResource StatusSuccessForegroundBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Warning}">
                                    <Setter Property="Foreground" Value="{DynamicResource StatusWarningForegroundBrush}"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding StatusSeverity}" Value="{x:Static status:StatusSeverity.Error}">
                                    <Setter Property="Foreground" Value="{DynamicResource StatusErrorForegroundBrush}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </Border>

        <Border Grid.Row="3"
                Margin="24,12,24,24"
                Padding="24"
                CornerRadius="{StaticResource SurfaceCornerRadius}"
                Background="{DynamicResource SurfaceBackgroundBrush}">
            <Grid>
                <ContentControl Content="{Binding SelectedSection}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <StackPanel HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Welcome to Dissonance"
                               FontSize="22"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                    <TextBlock Text="Choose a tool below to jump into its dedicated workspace."
                               FontSize="14"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               Margin="0,8,0,0"
                               TextWrapping="Wrap"/>
                    <ItemsControl ItemsSource="{Binding NavigationSections}"
                                  Margin="0,28,0,0"
                                  Focusable="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"
                                           HorizontalAlignment="Left"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Button Style="{StaticResource HomeTileButtonStyle}"
                                        Margin="0,0,24,24"
                                        Command="{Binding DataContext.NavigateToSectionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        ToolTip="{Binding Description, FallbackValue=Open this section}"
                                        AutomationProperties.Name="{Binding Title}"
                                        AutomationProperties.HelpText="{Binding Description, FallbackValue=Open this section}">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Title}"
                                                   FontSize="18"
                                                   FontWeight="SemiBold"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <TextBlock Text="{Binding Description}"
                                                   FontSize="14"
                                                   Margin="0,10,0,0"
                                                   TextWrapping="Wrap"
                                                   Opacity="0.9"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <TextBlock Text="{Binding BannerSubtitle}"
                                                   FontSize="13"
                                                   Margin="0,6,0,0"
                                                   TextWrapping="Wrap"
                                                   Opacity="0.75"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BannerSubtitle}" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
