<Window x:Name="Dissonance"
        x:Class="Dissonance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Dissonance.ViewModels"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        mc:Ignorable="d"
        Title="Dissonance"
        MinHeight="520"
        MinWidth="880"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        Background="{DynamicResource WindowBackgroundBrush}"
        Foreground="{DynamicResource PrimaryForegroundBrush}"
        FontFamily="{DynamicResource BaseFontFamily}"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="0"
                             CornerRadius="0"
                             GlassFrameThickness="0"
                             ResizeBorderThickness="6"/>
    </shell:WindowChrome.WindowChrome>
    <Grid Background="{DynamicResource PrimaryBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                Margin="-6,0,-6,12"
                Padding="16,0"
                CornerRadius="0,0,18,18"
                Background="{DynamicResource TitleBarBackgroundBrush}"
                SnapsToDevicePixels="True"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            Margin="0,0,16,0">
                    <Border Width="8"
                            Height="8"
                            CornerRadius="4"
                            Background="{DynamicResource AccentBrush}"
                            VerticalAlignment="Center"
                            Margin="0,0,8,0"/>
                    <TextBlock Text="Dissonance"
                               Style="{StaticResource WindowTitleTextStyle}"/>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Button Style="{StaticResource WindowControlButtonStyle}"
                            Margin="0"
                            Content="{StaticResource MinimizeIconGeometry}"
                            ToolTip="Minimize"
                            Click="MinimizeButton_Click"/>
                    <Button Style="{StaticResource MaximizeWindowControlButtonStyle}"
                            ToolTip="Maximize or restore"
                            Click="MaximizeButton_Click"/>
                    <Button Style="{StaticResource CloseWindowControlButtonStyle}"
                            Content="{StaticResource CloseIconGeometry}"
                            ToolTip="Close"
                            Click="CloseButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="1"
                Margin="24,12,24,0"
                Padding="24"
                CornerRadius="{StaticResource HeaderCornerRadius}"
                Background="{DynamicResource HeaderBackgroundBrush}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel>
                    <TextBlock Text="Dissonance"
                               Style="{StaticResource HeaderTitleTextStyle}"/>
                    <TextBlock Text="Accessibility-first speech control center"
                               Style="{StaticResource HeaderSubtitleTextStyle}"
                               Margin="0,10,0,0"/>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Button x:Name="SettingsButton"
                            Style="{StaticResource PrimaryButtonStyle}"
                            Content="Settings"
                            Height="36"
                            MinWidth="110"
                            Margin="0,0,12,0"
                            TabIndex="0"
                            AutomationProperties.Name="Open settings menu"
                            AutomationProperties.HelpText="Opens a list of actions related to configuration and saving settings"
                            Click="SettingsButton_Click"/>
                    <Popup x:Name="SettingsMenuPopup"
                           PlacementTarget="{Binding ElementName=SettingsButton}"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           StaysOpen="False"
                           PopupAnimation="Fade"
                           DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                           Opened="SettingsMenuPopup_Opened"
                           Closed="SettingsMenuPopup_Closed">
                        <Border Background="{DynamicResource CardBackgroundBrush}"
                                BorderBrush="{DynamicResource CardBorderBrush}"
                                BorderThickness="1"
                                CornerRadius="12"
                                Padding="12">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="18"
                                                  ShadowDepth="0"
                                                  Opacity="0.4"
                                                  Color="#99000000"/>
                            </Border.Effect>
                            <StackPanel FocusManager.IsFocusScope="True"
                                        FocusManager.FocusedElement="{Binding ElementName=SaveSettingsMenuButton}"
                                        KeyboardNavigation.TabNavigation="Cycle"
                                        KeyboardNavigation.ControlTabNavigation="Cycle"
                                        KeyboardNavigation.DirectionalNavigation="Cycle">
                                <Button x:Name="SaveSettingsMenuButton"
                                        Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Save current settings"
                                        Command="{Binding SaveSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        Margin="0,0,0,6"
                                        TabIndex="0"
                                        AutomationProperties.Name="Save current settings"
                                        AutomationProperties.HelpText="Saves the current configuration to the active profile"/>
                                <Button x:Name="SaveSettingsAsDefaultMenuButton"
                                        Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Save current settings as default"
                                        Command="{Binding SaveDefaultSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        Margin="0,0,0,6"
                                        TabIndex="1"
                                        AutomationProperties.Name="Save current settings as default"
                                        AutomationProperties.HelpText="Saves the configuration so it loads automatically next time"/>
                                <Border Height="1"
                                        Background="{DynamicResource CardBorderBrush}"
                                        Margin="0,4,0,6"/>
                                <CheckBox Style="{StaticResource MenuCheckBoxStyle}"
                                         Content="Auto-save default on close"
                                         IsChecked="{Binding SaveConfigAsDefaultOnClose, Mode=TwoWay}"
                                         Click="SettingsMenuAutoSave_Click"
                                         Margin="0,0,0,6"
                                         TabIndex="2"
                                         AutomationProperties.Name="Auto-save default on close"
                                         AutomationProperties.HelpText="Automatically write the current configuration as the default when the app is closed"/>
                                <Border Height="1"
                                        Background="{DynamicResource CardBorderBrush}"
                                        Margin="0,4,0,6"/>
                                <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Export settings..."
                                        Command="{Binding ExportSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        Margin="0,0,0,6"
                                        TabIndex="3"
                                        AutomationProperties.Name="Export settings"
                                        AutomationProperties.HelpText="Exports the current configuration to a file"/>
                                <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                        Content="Import settings..."
                                        Command="{Binding ImportSettingsCommand}"
                                        Click="SettingsMenuItem_Click"
                                        TabIndex="4"
                                        AutomationProperties.Name="Import settings"
                                        AutomationProperties.HelpText="Imports a configuration from a saved file"/>
                            </StackPanel>
                        </Border>
                    </Popup>
                    <TextBlock Text="{Binding CurrentThemeName}"
                               Foreground="{DynamicResource HeaderForegroundBrush}"
                               FontWeight="SemiBold"
                               Margin="0,0,12,0"/>
                    <ToggleButton Style="{StaticResource ThemeToggleButtonStyle}"
                                  IsChecked="{Binding IsDarkTheme, Mode=TwoWay}"
                                  ToolTip="Toggle between light and dark themes"
                                  TabIndex="1"
                                  AutomationProperties.Name="Toggle between light and dark theme"/>
                </StackPanel>
            </Grid>
        </Border>

        <Border Grid.Row="2"
                Margin="24,12,24,24"
                Padding="24"
                CornerRadius="{StaticResource SurfaceCornerRadius}"
                Background="{DynamicResource SurfaceBackgroundBrush}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="0,0,12,12">
                    <StackPanel>
                        <TextBlock x:Name="VoiceSelectionHeading"
                                   Text="Text-to-Speech Voice"
                                   Style="{StaticResource CardTitleTextStyle}"/>
                        <TextBlock Text="Choose which installed voice is used for speech."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <ComboBox x:Name="VoiceSelectionComboBox"
                                  Style="{StaticResource ModernComboBoxStyle}"
                                  ItemsSource="{Binding AvailableVoices}"
                                  SelectedItem="{Binding Voice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  AutomationProperties.LabeledBy="{Binding ElementName=VoiceSelectionHeading}"
                                  ToolTip="Select the voice used by the text-to-speech engine"
                                  TabIndex="2"
                                  MinWidth="220"
                                  MinHeight="34"/>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="12,0,0,12">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VoiceRateHeading"
                                       Text="Voice Rate"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding VoiceRate, StringFormat={}{0:F0}×}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Fine tune how quickly the narration plays back."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <TextBox x:Name="VoiceRateTextBox"
                                 Style="{StaticResource ModernTextBoxStyle}"
                                 Text="{Binding VoiceRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AutomationProperties.LabeledBy="{Binding ElementName=VoiceRateHeading}"
                                 ToolTip="Set the speaking rate of the text-to-speech voice"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Center"
                                  Width="140"
                                 TabIndex="3"
                                 AutomationProperties.HelpText="Enter a numeric value to control how fast the voice speaks"/>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="0,12,12,0">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VolumeHeading"
                                       Text="Volume"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding Volume, StringFormat={}{0}%}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Adjust how loud the speech output should be."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <Slider x:Name="VoiceVolumeSlider"
                                Style="{StaticResource ModernSliderStyle}"
                                Minimum="0"
                                Maximum="100"
                                Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                ToolTip="Set the output volume for text-to-speech"
                                AutomationProperties.Name="Voice volume"
                                AutomationProperties.LabeledBy="{Binding ElementName=VolumeHeading}"
                                AutomationProperties.HelpText="Use the arrow keys to adjust the speech output volume"
                                TabIndex="4"/>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="12,12,0,0">
                    <StackPanel>
                        <TextBlock x:Name="HotkeyHeading"
                                   Text="Speak Clipboard Hotkey"
                                   Style="{StaticResource CardTitleTextStyle}"/>
                        <TextBlock Text="Define the shortcut that instantly voices your clipboard."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="ReadClipboardHotkeyTextBox"
                                     Style="{StaticResource ModernTextBoxStyle}"
                                     Text="{Binding HotkeyCombination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     AutomationProperties.LabeledBy="{Binding ElementName=HotkeyHeading}"
                                     ToolTip="Set the hotkey used to trigger speaking the clipboard's text"
                                     Width="170"
                                     TabIndex="5"
                                     AutomationProperties.HelpText="Specify the key combination that will read clipboard contents"/>
                            <Button Content="Apply"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    Command="{Binding ApplyHotkeyCommand}"
                                    Margin="12,0,0,0"
                                    MinWidth="72"
                                    ToolTip="Apply the new hotkey immediately"
                                    TabIndex="6"
                                    AutomationProperties.Name="Apply hotkey"
                                    AutomationProperties.HelpText="Applies the entered hotkey combination"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>
