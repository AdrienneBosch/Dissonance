<Window x:Name="Dissonance"
        x:Class="Dissonance.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:local="clr-namespace:Dissonance.ViewModels"
        xmlns:shell="clr-namespace:System.Windows.Shell;assembly=PresentationFramework"
        mc:Ignorable="d"
        Title="Dissonance"
        MinHeight="520"
        MinWidth="880"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None"
        ResizeMode="CanResize"
        AllowsTransparency="False"
        Background="{DynamicResource WindowBackgroundBrush}"
        Foreground="{DynamicResource PrimaryForegroundBrush}"
        FontFamily="{DynamicResource BaseFontFamily}"
        d:DataContext="{d:DesignInstance Type=local:MainWindowViewModel}">
    <shell:WindowChrome.WindowChrome>
        <shell:WindowChrome CaptionHeight="0"
                             CornerRadius="0"
                             GlassFrameThickness="0"
                             ResizeBorderThickness="6"/>
    </shell:WindowChrome.WindowChrome>
    <Window.Resources>
        <DataTemplate DataType="{x:Type local:NavigationSectionViewModel}">
            <ContentPresenter Content="{Binding ContentViewModel}"/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type local:MainWindowViewModel}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="0"
                        Margin="0,0,12,12">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <TextBlock x:Name="VoiceSelectionHeading"
                                   Grid.Row="0"
                                   Text="Text-to-Speech Voice"
                                   Style="{StaticResource CardTitleTextStyle}"/>
                        <TextBlock Grid.Row="1"
                                   Text="Choose which installed voice is used for speech."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <ComboBox x:Name="VoiceSelectionComboBox"
                                  Grid.Row="2"
                                  Style="{StaticResource ModernComboBoxStyle}"
                                  ItemsSource="{Binding AvailableVoices}"
                                  SelectedItem="{Binding Voice, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  AutomationProperties.LabeledBy="{Binding ElementName=VoiceSelectionHeading}"
                                  ToolTip="Select the voice used by the text-to-speech engine"
                                  TabIndex="2"
                                  HorizontalAlignment="Stretch"
                                  MinWidth="220"
                                  MinHeight="34"/>
                    </Grid>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="0"
                        Grid.Column="1"
                        Margin="12,0,0,12">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VoiceRateHeading"
                                       Text="Voice Rate"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding VoiceRate, StringFormat={}{0:F0}Ã—}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Fine tune how quickly the narration plays back."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <TextBox x:Name="VoiceRateTextBox"
                                 Style="{StaticResource ModernTextBoxStyle}"
                                 Text="{Binding VoiceRate, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 AutomationProperties.LabeledBy="{Binding ElementName=VoiceRateHeading}"
                                 ToolTip="Set the speaking rate of the text-to-speech voice"
                                 HorizontalAlignment="Left"
                                 HorizontalContentAlignment="Center"
                                  Width="140"
                                 TabIndex="3"
                                 AutomationProperties.HelpText="Enter a numeric value to control how fast the voice speaks"/>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="1"
                        Grid.Column="0"
                        Margin="0,12,12,0">
                    <StackPanel>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock x:Name="VolumeHeading"
                                       Text="Volume"
                                       Style="{StaticResource CardTitleTextStyle}"/>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding Volume, StringFormat={}{0}%}"
                                       VerticalAlignment="Center"
                                       Style="{StaticResource ValueBadgeTextStyle}"/>
                        </Grid>
                        <TextBlock Text="Adjust how loud the speech output should be."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <Slider x:Name="VoiceVolumeSlider"
                                Style="{StaticResource ModernSliderStyle}"
                                Minimum="0"
                                Maximum="100"
                                Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                SmallChange="1"
                                LargeChange="10"
                                AutomationProperties.Name="Voice volume"
                                AutomationProperties.LabeledBy="{Binding ElementName=VolumeHeading}"
                                AutomationProperties.HelpText="Use the arrow keys to adjust the speech output volume"
                                Focusable="True"
                                IsTabStop="True"
                                TabIndex="4"
                                KeyDown="VoiceVolumeSlider_KeyDown">
                            <Slider.ToolTip>
                                <ToolTip>
                                    <StackPanel>
                                        <TextBlock Text="Set the output volume for text-to-speech"/>
                                        <TextBlock Text="{Binding Value, RelativeSource={RelativeSource AncestorType=Slider}, StringFormat=Current volume: {0}%}"/>
                                    </StackPanel>
                                </ToolTip>
                            </Slider.ToolTip>
                        </Slider>
                    </StackPanel>
                </Border>

                <Border Style="{StaticResource CardContainerStyle}"
                        Grid.Row="1"
                        Grid.Column="1"
                        Margin="12,12,0,0">
                    <StackPanel>
                        <TextBlock x:Name="HotkeyHeading"
                                   Text="Speak Clipboard Hotkey"
                                   Style="{StaticResource CardTitleTextStyle}"/>
                        <TextBlock Text="Define the shortcut that instantly voices your clipboard."
                                   Style="{StaticResource CardDescriptionTextStyle}"/>
                        <StackPanel Orientation="Horizontal">
                            <TextBox x:Name="ReadClipboardHotkeyTextBox"
                                     Style="{StaticResource ModernTextBoxStyle}"
                                     Text="{Binding HotkeyCombination, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                     AutomationProperties.LabeledBy="{Binding ElementName=HotkeyHeading}"
                                     ToolTip="Set the hotkey used to trigger speaking the clipboard's text"
                                     Width="170"
                                     TabIndex="5"
                                     IsReadOnly="True"
                                     PreviewKeyDown="ReadClipboardHotkeyTextBox_PreviewKeyDown"
                                     AutomationProperties.HelpText="Specify the key combination that will read clipboard contents"/>
                            <Button Content="Apply"
                                    Style="{StaticResource PrimaryButtonStyle}"
                                    Command="{Binding ApplyHotkeyCommand}"
                                    Margin="12,0,0,0"
                                    MinWidth="72"
                                    ToolTip="Apply the new hotkey immediately"
                                    TabIndex="6"
                                    AutomationProperties.Name="Apply hotkey"
                                    AutomationProperties.HelpText="Applies the entered hotkey combination"/>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </Grid>
        </DataTemplate>
    </Window.Resources>
    <Grid Background="{DynamicResource PrimaryBackgroundBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Border Grid.Row="0"
                Margin="-6,0,-6,12"
                Padding="16,0"
                CornerRadius="0,0,18,18"
                Background="{DynamicResource TitleBarBackgroundBrush}"
                SnapsToDevicePixels="True"
                MouseLeftButtonDown="TitleBar_MouseLeftButtonDown">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <StackPanel Orientation="Horizontal"
                            VerticalAlignment="Center"
                            Margin="0,0,16,0">
                    <Border Width="8"
                            Height="8"
                            CornerRadius="4"
                            Background="{DynamicResource AccentBrush}"
                            VerticalAlignment="Center"
                            Margin="0,0,8,0"/>
                    <TextBlock Text="Dissonance"
                               Style="{StaticResource WindowTitleTextStyle}"/>
                </StackPanel>
                <StackPanel Grid.Column="1"
                            Orientation="Horizontal"
                            VerticalAlignment="Center">
                    <Button Style="{StaticResource WindowControlButtonStyle}"
                            Margin="0"
                            Content="{StaticResource MinimizeIconGeometry}"
                            ToolTip="Minimize"
                            AutomationProperties.Name="Minimize window"
                            AutomationProperties.HelpText="Minimizes the application window"
                            Click="MinimizeButton_Click"/>
                    <Button Style="{StaticResource MaximizeWindowControlButtonStyle}"
                            ToolTip="Maximize or restore window"
                            AutomationProperties.Name="Maximize or restore window"
                            AutomationProperties.HelpText="Toggles between maximized and windowed layouts"
                            Click="MaximizeButton_Click"/>
                    <Button Style="{StaticResource CloseWindowControlButtonStyle}"
                            Content="{StaticResource CloseIconGeometry}"
                            ToolTip="Close window"
                            AutomationProperties.Name="Close window"
                            AutomationProperties.HelpText="Closes the Dissonance application"
                            Click="CloseButton_Click"/>
                </StackPanel>
            </Grid>
        </Border>

        <Grid Grid.Row="1"
              Margin="24,6,24,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        Orientation="Horizontal"
                        VerticalAlignment="Top"
                        Margin="0,0,12,0">
                <ToggleButton x:Name="NavigationToggleButton"
                              Style="{StaticResource NavigationToggleButtonStyle}"
                              IsChecked="{Binding IsNavigationMenuOpen, Mode=TwoWay}"
                              ToolTip="Toggle navigation menu"
                              TabIndex="0"
                              AutomationProperties.Name="Toggle navigation menu"
                              AutomationProperties.HelpText="Shows the available Dissonance tools"/>
                <Popup x:Name="NavigationMenuPopup"
                       PlacementTarget="{Binding ElementName=NavigationToggleButton}"
                       Placement="Bottom"
                       AllowsTransparency="True"
                       StaysOpen="False"
                       PopupAnimation="Fade"
                       IsOpen="{Binding IsNavigationMenuOpen, Mode=TwoWay}"
                       DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                       Opened="NavigationMenuPopup_Opened"
                       Closed="NavigationMenuPopup_Closed">
                    <Border Background="{DynamicResource CardBackgroundBrush}"
                            BorderBrush="{DynamicResource CardBorderBrush}"
                            BorderThickness="1"
                            CornerRadius="12"
                            Padding="12">
                        <Border.Effect>
                            <DropShadowEffect BlurRadius="18"
                                              ShadowDepth="0"
                                              Opacity="0.4"
                                              Color="#99000000"/>
                        </Border.Effect>
                        <StackPanel FocusManager.IsFocusScope="True"
                                    FocusManager.FocusedElement="{Binding ElementName=NavigationHomeButton}"
                                    KeyboardNavigation.TabNavigation="Cycle"
                                    KeyboardNavigation.ControlTabNavigation="Cycle"
                                    KeyboardNavigation.DirectionalNavigation="Cycle">
                            <Button x:Name="NavigationHomeButton"
                                    Style="{StaticResource NavigationMenuHomeButtonStyle}"
                                    Command="{Binding NavigateToSectionCommand}"
                                    CommandParameter="{x:Null}"
                                    Margin="0,0,0,8"
                                    ToolTip="Return to the Dissonance home dashboard"
                                    TabIndex="0"
                                    AutomationProperties.Name="Home"
                                    AutomationProperties.HelpText="Return to the main Dissonance dashboard">
                                <TextBlock Text="Home"
                                           Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                            </Button>
                            <Border Height="1"
                                    Background="{DynamicResource CardBorderBrush}"/>
                            <ListBox x:Name="NavigationListBox"
                                     ItemsSource="{Binding NavigationSections}"
                                     SelectedItem="{Binding SelectedSection, Mode=TwoWay}"
                                     MinWidth="220"
                                     MaxHeight="320"
                                     BorderThickness="0"
                                     Background="Transparent"
                                     Foreground="{DynamicResource PrimaryForegroundBrush}"
                                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                                     ToolTip="Select a section to open"
                                     TabIndex="1"
                                     PreviewKeyDown="NavigationListBox_PreviewKeyDown"
                                     AutomationProperties.Name="Available sections"
                                     AutomationProperties.HelpText="Use the arrow keys to choose a section and press Enter to open it"
                                     SelectionMode="Single"
                                     HorizontalContentAlignment="Stretch"
                                     ItemContainerStyle="{StaticResource NavigationMenuListBoxItemStyle}">
                                <ListBox.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:NavigationSectionViewModel}">
                                        <TextBlock Text="{Binding Title}"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </StackPanel>
                    </Border>
                </Popup>
            </StackPanel>

            <Border Grid.Column="1"
                    Padding="20,12"
                    CornerRadius="{StaticResource HeaderCornerRadius}"
                    Background="{DynamicResource HeaderBackgroundBrush}">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <TextBlock Text="Dissonance"
                               Style="{StaticResource HeaderTitleTextStyle}"/>
                    <TextBlock Text="Accessibility-first speech control center"
                               Style="{StaticResource HeaderSubtitleTextStyle}"
                               Margin="0,10,0,0"/>
                </StackPanel>
            </Border>

            <Border Grid.Column="1"
                    Padding="20,12"
                    CornerRadius="{StaticResource HeaderCornerRadius}"
                    Background="{DynamicResource SectionHeaderBackgroundBrush}"
                    BorderBrush="{DynamicResource SectionHeaderBorderBrush}"
                    BorderThickness="1">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Margin="0,0,24,0">
                        <TextBlock Text="{Binding SelectedSection.BannerTitle}"
                                   FontSize="24"
                                   FontWeight="Bold"
                                   Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                        <TextBlock Text="{Binding SelectedSection.BannerSubtitle}"
                                   FontSize="14"
                                   Margin="0,6,0,0"
                                   Foreground="{DynamicResource SecondaryForegroundBrush}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Visible"/>
                                    <Style.Triggers>
                                        <Trigger Property="Text" Value="">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                    <StackPanel Grid.Column="1"
                                Orientation="Horizontal"
                                VerticalAlignment="Center">
                        <StackPanel.Style>
                            <Style TargetType="StackPanel">
                                <Setter Property="Visibility" Value="Collapsed"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SelectedSection.ShowSettingsControls}" Value="True">
                                        <Setter Property="Visibility" Value="Visible"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <Button x:Name="SettingsButton"
                                Style="{StaticResource PrimaryButtonStyle}"
                                Content="Settings"
                                Height="36"
                                MinWidth="110"
                                Margin="0,0,12,0"
                                ToolTip="Open settings menu"
                                TabIndex="0"
                                AutomationProperties.Name="Open settings menu"
                                AutomationProperties.HelpText="Opens a list of configuration options"
                                Click="SettingsButton_Click"/>
                        <Popup x:Name="SettingsMenuPopup"
                               PlacementTarget="{Binding ElementName=SettingsButton}"
                               Placement="Bottom"
                               AllowsTransparency="True"
                               StaysOpen="False"
                               PopupAnimation="Fade"
                               DataContext="{Binding DataContext, RelativeSource={RelativeSource AncestorType=Window}}"
                               Opened="SettingsMenuPopup_Opened"
                               Closed="SettingsMenuPopup_Closed">
                            <Border Background="{DynamicResource CardBackgroundBrush}"
                                    BorderBrush="{DynamicResource CardBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="12"
                                    Padding="12">
                                <Border.Effect>
                                    <DropShadowEffect BlurRadius="18"
                                                      ShadowDepth="0"
                                                      Opacity="0.4"
                                                      Color="#99000000"/>
                                </Border.Effect>
                                <StackPanel FocusManager.IsFocusScope="True"
                                            FocusManager.FocusedElement="{Binding ElementName=SaveSettingsAsDefaultMenuButton}"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.ControlTabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle">
                                    <Button x:Name="SaveSettingsAsDefaultMenuButton"
                                            Style="{StaticResource DropdownMenuButtonStyle}"
                                            Content="Save current settings as default"
                                            Command="{Binding SaveDefaultSettingsCommand}"
                                            Click="SettingsMenuItem_Click"
                                            Margin="0,0,0,6"
                                            TabIndex="0"
                                            ToolTip="Save the current configuration as the default"
                                            AutomationProperties.Name="Save current settings as default"
                                            AutomationProperties.HelpText="Saves the configuration so it loads automatically next time"/>
                                    <Border Height="1"
                                            Background="{DynamicResource CardBorderBrush}"
                                            Margin="0,4,0,6"/>
                                    <CheckBox Style="{StaticResource MenuCheckBoxStyle}"
                                             Content="Auto-save default on close"
                                             IsChecked="{Binding SaveConfigAsDefaultOnClose, Mode=TwoWay}"
                                             Click="SettingsMenuAutoSave_Click"
                                             Margin="0,0,0,6"
                                             TabIndex="1"
                                             ToolTip="Automatically save the configuration when closing the app"
                                             AutomationProperties.Name="Auto-save default on close"
                                             AutomationProperties.HelpText="Automatically write the current configuration as the default when the app is closed"/>
                                    <Border Height="1"
                                            Background="{DynamicResource CardBorderBrush}"
                                            Margin="0,4,0,6"/>
                                    <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                            Content="Export settings..."
                                            Command="{Binding ExportSettingsCommand}"
                                            Click="SettingsMenuItem_Click"
                                            Margin="0,0,0,6"
                                            TabIndex="2"
                                            ToolTip="Export the current configuration to a file"
                                            AutomationProperties.Name="Export settings"
                                            AutomationProperties.HelpText="Exports the current configuration to a file"/>
                                    <Button Style="{StaticResource DropdownMenuButtonStyle}"
                                            Content="Import settings..."
                                            Command="{Binding ImportSettingsCommand}"
                                            Click="SettingsMenuItem_Click"
                                            TabIndex="3"
                                            ToolTip="Import a configuration from a saved file"
                                            AutomationProperties.Name="Import settings"
                                            AutomationProperties.HelpText="Imports a configuration from a saved file"/>
                                </StackPanel>
                            </Border>
                        </Popup>
                        <TextBlock Text="{Binding CurrentThemeName}"
                                   Foreground="{DynamicResource HeaderForegroundBrush}"
                                   FontWeight="SemiBold"
                                   Margin="0,0,12,0"
                                   VerticalAlignment="Center"/>
                        <ToggleButton Style="{StaticResource ThemeToggleButtonStyle}"
                                      IsChecked="{Binding IsDarkTheme, Mode=TwoWay}"
                                      ToolTip="Toggle between light and dark themes"
                                      TabIndex="1"
                                      AutomationProperties.Name="Toggle between light and dark theme"
                                      AutomationProperties.HelpText="Switches between the light and dark themes"/>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>

        <Border Grid.Row="2"
                Margin="24,12,24,24"
                Padding="24"
                CornerRadius="{StaticResource SurfaceCornerRadius}"
                Background="{DynamicResource SurfaceBackgroundBrush}">
            <Grid>
                <ContentControl Content="{Binding SelectedSection}">
                    <ContentControl.Style>
                        <Style TargetType="ContentControl">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <Trigger Property="Content" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>

                <StackPanel HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                    <StackPanel.Style>
                        <Style TargetType="StackPanel">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedSection}" Value="{x:Null}">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>
                    <TextBlock Text="Welcome to Dissonance"
                               FontSize="22"
                               FontWeight="SemiBold"
                               Foreground="{DynamicResource PrimaryForegroundBrush}"/>
                    <TextBlock Text="Choose a tool below to jump into its dedicated workspace."
                               FontSize="14"
                               Foreground="{DynamicResource SecondaryForegroundBrush}"
                               Margin="0,8,0,0"
                               TextWrapping="Wrap"/>
                    <ItemsControl ItemsSource="{Binding NavigationSections}"
                                  Margin="0,28,0,0"
                                  Focusable="False">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <WrapPanel Orientation="Horizontal"
                                           HorizontalAlignment="Left"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type local:NavigationSectionViewModel}">
                                <Button Style="{StaticResource HomeTileButtonStyle}"
                                        Margin="0,0,24,24"
                                        Command="{Binding DataContext.NavigateToSectionCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                        CommandParameter="{Binding}"
                                        ToolTip="{Binding Description, FallbackValue=Open this section}"
                                        AutomationProperties.Name="{Binding Title}"
                                        AutomationProperties.HelpText="{Binding Description, FallbackValue=Open this section}">
                                    <StackPanel>
                                        <TextBlock Text="{Binding Title}"
                                                   FontSize="18"
                                                   FontWeight="SemiBold"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <TextBlock Text="{Binding Description}"
                                                   FontSize="14"
                                                   Margin="0,10,0,0"
                                                   TextWrapping="Wrap"
                                                   Opacity="0.9"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"/>
                                        <TextBlock Text="{Binding BannerSubtitle}"
                                                   FontSize="13"
                                                   Margin="0,6,0,0"
                                                   TextWrapping="Wrap"
                                                   Opacity="0.75"
                                                   Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding BannerSubtitle}" Value="">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </Button>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Window>
